unit Unit2;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Data.DB, Data.SqlExpr, Vcl.Grids,
  Vcl.DBGrids, FireDAC.Stan.Intf, FireDAC.Stan.Option, FireDAC.Stan.Param,
  FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf, FireDAC.DApt.Intf,
  FireDAC.Stan.Async, FireDAC.DApt, FireDAC.Comp.DataSet, FireDAC.Comp.Client,
  FireDAC.Phys.MySQLDef, FireDAC.Phys, FireDAC.Phys.MySQL, FireDAC.UI.Intf,
  FireDAC.Stan.Def, FireDAC.Stan.Pool, FireDAC.VCLUI.Wait, Vcl.StdCtrls,
  Vcl.Mask, Vcl.ExtCtrls, Vcl.DBCtrls;

type
  TForm2 = class(TForm)
    DBGrid1: TDBGrid;
    DataSource1: TDataSource;
    FDQuery1: TFDQuery;
    FDPhysMySQLDriverLink1: TFDPhysMySQLDriverLink;
    FDConnection1: TFDConnection;
    search: TButton;
    GroupBox1: TGroupBox;
    Label1: TLabel;
    EditCarNum: TEdit;
    Button1: TButton;
    Button2: TButton;
    GroupBox2: TGroupBox;
    Label2: TLabel;
    Editminpay: TEdit;
    Label3: TLabel;
    Editdaypay: TEdit;
    ComboBox1: TComboBox;
    lblKIND: TLabel;
    lblENDTIME: TLabel;
    lblSTARTTIME: TLabel;
    Edit1: TEdit;
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure searchClick(Sender: TObject);
    procedure Button1Click(Sender: TObject);
    procedure Button2Click(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Form2: TForm2;

implementation

{$R *.dfm}
uses unit1;

procedure TForm2.searchClick(Sender: TObject);
begin
 try
    begin
      with FDConnection1 do begin
      Params.Clear;
      Params.Add('DriverID=MySQL');
      Params.Add('Server=127.0.0.1');
      Params.Add('Port=3306');
      Params.Add('Database=parkinglot');
      Params.Add('User_Name=root');
      Params.Add('Password=root');

      Params.Add('CharacterSet=utf8');

      Open;
      end;
      with FDQuery1 do begin
      SQL.Clear;
      SQL.Add('select * from ledger');
            open;
      end;
end;
 finally


 end;
 end;

procedure TForm2.Button1Click(Sender: TObject);

begin

    if ComboBox1.Text = '일반주차' then
       begin
                try

                  with FDConnection1 do begin
                  Params.Clear;
                  Params.Add('DriverID=MySQL');
                  Params.Add('Server=127.0.0.1');
                  Params.Add('Port=3306');
                  Params.Add('Database=parkinglot');
                  Params.Add('User_Name=root');
                  Params.Add('Password=root');
                  Params.Add('CharacterSet=utf8');
                  Open;
                 end;
                    with FDQuery1 do begin
                    SQL.Clear;
                    SQL.Add('INSERT INTO ledger(carnum,startTIME,kind,pay)');
                    SQL.Add('VALUE(:carN,:StartT,:kind,:pay);');
                    Params.ParamByName('carN').AsString := EditCarNum.Text;
                    Params.ParamByName('StartT').AsString := formatDateTime('yyyy-mm-dd hh:mm:ss', now);
                    Params.ParamByName('kind').AsString := ComboBox1.Text;
                    Params.ParamByName('pay').AsString := '3000';
                    execsql;
                    showMessage('추가완료');
                    SQL.Clear;
                    SQL.Add('select * from ledger');
                    open;
                   end;
                 finally



               end;
        end;

     if ComboBox1.Text = '일일주차' then
       begin
                try

                  with FDConnection1 do begin
                  Params.Clear;
                  Params.Add('DriverID=MySQL');
                  Params.Add('Server=127.0.0.1');
                  Params.Add('Port=3306');
                  Params.Add('Database=parkinglot');
                  Params.Add('User_Name=root');
                  Params.Add('Password=root');
                  Params.Add('CharacterSet=utf8');
                  Open;
                 end;
                    with FDQuery1 do begin
                    SQL.Clear;
                    SQL.Add('INSERT INTO ledger(carnum,startTIME,endTIME,kind,pay)');
                    SQL.Add('VALUE(:carN,:StartT,:EndT,:kind,:pay);');
                    Params.ParamByName('carN').AsString := EditCarNum.Text;
                    Params.ParamByName('StartT').AsString := formatDateTime('yyyy-mm-dd hh:mm:ss', now);
                    Params.ParamByName('EndT').AsString := formatDateTime('yyyy-mm-dd hh:mm:ss', now+ 1);
                    Params.ParamByName('kind').AsString := ComboBox1.Text;
                    Params.ParamByName('pay').AsString := '20000';
                    execsql;
                    showMessage('추가완료');
                    SQL.Clear;
                    SQL.Add('select * from ledger');
                    open;
                   end;
                 finally



               end;
        end;

     end;

procedure TForm2.Button2Click(Sender: TObject);
var
startend:string;
start1,end1:string;
begin
 try

                  with FDConnection1 do begin
                  Params.Clear;
                  Params.Add('DriverID=MySQL');
                  Params.Add('Server=127.0.0.1');
                  Params.Add('Port=3306');
                  Params.Add('Database=parkinglot');
                  Params.Add('User_Name=root');
                  Params.Add('Password=root');
                  Params.Add('CharacterSet=utf8');
                  Open;
                 end;
                     with FDQuery1 do begin
                    SQL.Clear;
                    SQL.Add('select * from ledger');
                    SQL.Add('where carnum =:carN;');
                    Params.ParamByName('carN').AsString := EditCarNum.text;

                    open;
                    end;
 //일반주차계산식
 lblKIND.Caption := dbGrid1.Fields[4].AsString;
 if lblKIND.Caption = '일반주차' then
 begin
   lblENDTIME.Caption := formatDateTime('yyyy-mm-dd hh:mm:ss', now);
   lblSTARTTIME.Caption := dbGrid1.Fields[2].AsString;
   end1 := lblENDTIME.Caption;       //변수에 endTIME 넣기
   start1 := lblSTARTTIME.Caption;  //변수에 STARTIME 넣기
                                    //변수에 ENDTIME - STARTTIME 결과값넣은후 일 또는 시간까지 모두 분으로 바꾸어 10분으로 나눈다
                                    //나눈값 * editMinPay.Text 값을 넣고 기존데이터 + 변수값을한후 메세지박스또는 라벨에 넣어준다

   //일일주차 계산식

  {1.endTIME 값 불러오기
   2.endTIME 값보다  nowTIME 값이 낮을경우 기존pay데이터만 출력
   3.nowTIME 값이 더 많은경우 오바된값을 분당으로 바꾸어 10분당가격을 추가해서 보여준다.}


 end;

 finally


 end;
end;


procedure TForm2.FormClose(Sender: TObject; var Action: TCloseAction);
begin
form1.close;
end;

end.
